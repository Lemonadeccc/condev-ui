[{"id":0,"title":"SAMPLE","content":"# Markdown & MDX\r\n\r\n# SAMPLE\r\n\r\nBASIC\r\n\r\n```tsx import React from 'react';\r\nimport { Button } from '@condev-ui/ui';\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        gap: '10px',\r\n      }}\r\n    >\r\n      <div>\r\n        <Button size=\"small\">Small</Button>\r\n      </div>\r\n      <div>\r\n        <Button size=\"medium\">Medium</Button>\r\n      </div>\r\n      <div>\r\n        <Button size=\"large\">Large</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nColors\r\n\r\n```tsx\r\nimport React from 'react';\r\n\r\nimport { Button } from '@condev-ui/ui';\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }}>\r\n      <div>\r\n        <Button size=\"small\" variant=\"filled\">\r\n          Filled\r\n        </Button>\r\n      </div>\r\n\r\n      <div>\r\n        <Button size=\"small\" variant=\"light\">\r\n          Light\r\n        </Button>\r\n      </div>\r\n\r\n      <div>\r\n        <Button size=\"medium\" variant=\"outline\">\r\n          Outline\r\n        </Button>\r\n      </div>\r\n\r\n      <div>\r\n        <Button size=\"large\" variant=\"transparent\">\r\n          Transparent\r\n        </Button>\r\n      </div>\r\n\r\n      <div>\r\n        <Button size=\"large\" variant=\"danger\">\r\n          Danger\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nEvent\r\n\r\n```tsx\r\nimport React from 'react';\r\n\r\nimport { Button } from '@condev-ui/ui';\r\n\r\nexport default function ButtonEvent() {\r\n  function handleClick() {\r\n    alert('clicked');\r\n  }\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Click me</Button>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n## API\r\n\r\n\n  ### Button\n\n  \n  |Property|Description|Type|Default Value|\n|:---:|:---:|:---:|:---:|\n  |size|The size of the button|`\"small\" \\| \"medium\" \\| \"large\"`|`-`|\n|variant|The variant of the button|`\"filled\" \\| \"light\" \\| \"outline\" \\| \"transparent\" \\| \"danger\"`|`-`|\n|disabled|Whether the button is disabled|`boolean`|`-`|\n|children|The children of the button|`React.ReactNode`|`-`|\n|onClick|The function to be called when the button is clicked|`() => void`|`-`|\n    \r\n","routePath":"/condev-ui/guide/button","lang":"","toc":[{"text":"API","id":"api","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"","content":"BASIC\n\n```tsx\nimport React from 'react';\nimport { Calendar } from '@condev-ui/ui';\n\nexport default function ButtonDemo() {\n  return <Calendar />;\n}\n```\n\n## API\n\n\n  ### Calendar\n\n  \n  |Property|Description|Type|Default Value|\n|:---:|:---:|:---:|:---:|\n  |value|(Controlled) The currently selected date|`Dayjs`|`-`|\n|defaultValue|(Uncontrolled) The default selected date|`Dayjs`|`-`|\n|onChange|Callback function when the date changes|`(date: Dayjs) => void`|`-`|\n|isDetail|Whether to display details, may affect styling|`boolean`|`-`|\n|dateRender|Custom rendering function for date cells|`(currentDate: Dayjs) => ReactNode`|`-`|\n|headerRender|Custom rendering function for the header|`(currentDate: Dayjs) => ReactNode`|`-`|\n    \n","routePath":"/condev-ui/guide/calendar","lang":"","toc":[{"text":"API","id":"api","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"Markdown & MDX","content":"#\n\nRspress supports not only Markdown but also MDX, a powerful way to develop\ncontent.\n\n\nMarkdown#\n\n\n\nMDX is a superset of Markdown, which means you can write Markdown files as\nusual. For example:\n\n\n\n\nUse component#\n\nWhen you want to use React components in Markdown files, you should name your\nfiles with .mdx extension. For example:\n\n\n\n\nFront matter#\n\nYou can add Front Matter at the beginning of your Markdown file, which is a\nYAML-formatted object that defines some metadata. For example:\n\n\n\n> Note: By default, Rspress uses h1 headings as html headings.\n\nYou can also access properties defined in Front Matter in the body, for example:\n\n\n\nThe previously defined properties will be passed to the component as frontmatter\nproperties. So the final output will be:\n\n\n\n\nCustom container#\n\nYou can use the ::: syntax to create custom containers and support custom\ntitles. For example:\n\nInput:\n\n\n\nOutput:\n\nTIP\n\nThis is a block of type tip\n\nINFO\n\nThis is a block of type info\n\nWARNING\n\nThis is a block of type warning\n\nDANGER\n\nThis is a block of type danger\n\nDETAILS\n\nThis is a block of type details\n\nCustom Title\n\nThis is a block of Custom Title\n\nCustom Title\n\nThis is a block of Custom Title\n\n\nCode block#\n\n\nBasic usage#\n\nYou can use the ``` syntax to create code blocks and support custom titles. For\nexample:\n\nInput:\n\n\n\nOutput:\n\n\n\n\n\n\nShow line numbers#\n\nIf you want to display line numbers, you can enable the showLineNumbers option\nin the config file:\n\n\n\n\nWrap code#\n\nIf you want to wrap long code line by default, you can enable the\ndefaultWrapCode option in the config file:\n\n\n\n\nLine highlighting#\n\nYou can also apply line highlighting and code block title at the same time, for\nexample:\n\nInput:\n\n\n\nOutput:\n\n\n\n\nRustify MDX compiler#\n\nYou can enable Rustify MDX compiler by following config:","routePath":"/condev-ui/guide/","lang":"","toc":[{"text":"Markdown","id":"markdown","depth":2,"charIndex":88},{"text":"Use component","id":"use-component","depth":2,"charIndex":200},{"text":"Front matter","id":"front-matter","depth":2,"charIndex":338},{"text":"Custom container","id":"custom-container","depth":2,"charIndex":769},{"text":"Code block","id":"code-block","depth":2,"charIndex":1192},{"text":"Basic usage","id":"basic-usage","depth":3,"charIndex":1206},{"text":"Show line numbers","id":"show-line-numbers","depth":3,"charIndex":1334},{"text":"Wrap code","id":"wrap-code","depth":3,"charIndex":1457},{"text":"Line highlighting","id":"line-highlighting","depth":3,"charIndex":1582},{"text":"Rustify MDX compiler","id":"rustify-mdx-compiler","depth":2,"charIndex":1714}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"Hello world!","content":"#\n\n\nStart#\n\nWrite something to build your own docs! üéÅ","routePath":"/condev-ui/hello","lang":"","toc":[{"text":"Start","id":"start","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""}]